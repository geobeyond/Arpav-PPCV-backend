name: arpav-ppcv

x-backend-image: &backend-image "ghcr.io/geobeyond/arpav_ppcv:develop"
x-postgis-image: &postgis-image "postgis/postgis:16-3.4"
x-postgres-db-healthcheck: &postgres-db-healthcheck
  interval: 10s
  timeout: 3s
  start_period: 1m
  retries: 10
  test: |
    export PGPASSWORD=$${POSTGRES_PASSWORD:-}
    args="--host 127.0.0.1 --username $${POSTGRES_USER} --dbname $${POSTGRES_DB} --quiet --no-align --tuples-only"
    response=$$(echo 'SELECT 1' | psql $${args})
    if [ $${response} = '1' ];
    then exit 0;
    else echo "+++++++++++++DB $${POSTGRES_DB} is not up+++++++++++++"; exit 1;
    fi

services:

#  web:
#    image: *backend-image
#    depends_on:
#      web-db:
#        condition: service_healthy

#  worker:
#    image: *backend-image

#  message-broker:
#    image: redis

#  web-db:
#    image: *postgis-image
#    ports:
#      - target: "5432"
#        published: "55432"
#    environment:
#      PGDATA: /var/lib/postgresql/data/pgdata
#      POSTGRES_DB: "arpavppcv"
#      POSTGRES_PASSWORD: "pass"
#      POSTGRES_USER: "arpavppcv"
#    healthcheck: *postgres-db-healthcheck

  thredds:
    image: unidata/thredds-docker:5.4
    ports:
      - target: "8080"
        published: "8081"
    environment:
      TDS_CONTENT_ROOT_PATH: /usr/local/tomcat/content
      TDM_PW: "arpavppcvthredds"
      TDS_HOST: "http://localhost:8081"
    volumes:
      - type: bind
        source: $PWD/thredds/content-root/catalog.xml
        target: /usr/local/tomcat/content/thredds/catalog.xml
      - type: bind
        source: $PWD/thredds/content-root/catalog_rcm.xml
        target: /usr/local/tomcat/content/thredds/catalog_rcm.xml
      - type: bind
        source: $PWD/thredds/content-root/threddsConfig.xml
        target: /usr/local/tomcat/content/thredds/threddsConfig.xml
      - type: bind
        source: $PWD/thredds/content-root/wmsConfig.xml
        target: /usr/local/tomcat/content/thredds/wmsConfig.xml
      - type: bind
        source: /datadisk/data/geobeyond/arpav-ppcv/datasets
        target: /datasets

#  martin:
#    image: ghcr.io/maplibre/martin:v0.13.0
#    ports:
#      - target: "3000"
#        published: "3000"
#    environment:
#      - DATABASE_URL=postgres://arpavppcv_tiles:pass@martin-db/arpavppcv_tiles
#    depends_on:
#      martin-db:
#        condition: service_healthy

#  martin-db:
#    image: *postgis-image
#    ports:
#      - target: "5432"
#        published: "55433"
#    environment:
#      PGDATA: /var/lib/postgresql/data/pgdata
#      POSTGRES_DB: "arpavppcv_tiles"
#      POSTGRES_PASSWORD: "pass"
#      POSTGRES_USER: "arpavppcv_tiles"
#    healthcheck: *postgres-db-healthcheck
