[tool.poetry]
name = "arpav-ppcv-backend"
version = "0.1.0"
description = "Backend component of the ARPAV-PPCV platform"
authors = ["Geobeyond <info@geobeyond.it>"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "djangoapp", from = "backend"},
    {include = "forecastattributes", from = "backend/padoa"},
    {include = "places", from = "backend/padoa"},
    {include = "thredds", from = "backend/padoa"},
    {include = "arpav_ppcv"},
]

[tool.poetry.dependencies]
python = "^3.10"
django = "3.0.6"
djangorestframework = "3.11.0"
typer = {extras = ["standard"], version = "^0.12.3"}
django-dotenv = "^1.4.2"
django-extensions = "2.2.9"
django-celery-beat = "2.0.0"
celery = "4.4.2"
django-celery-results = "1.2.1"
django-oauth-toolkit = "1.3.2"
channels = "2.4.0"
djangorestframework-gis = "0.15"
django-cors-headers = "3.2.1"
django-guardian = "2.2.0"
psycopg2-binary = "2.8.5"
djangorestframework-bulk = "0.2.1"
xmltodict = "0.12.0"
pydap = "3.4.0"
threddsclient = "0.4.2"
pandas = "1.5.0"
requests = "2.23.0"
python-dateutil = "2.8.1"
pytz = "2020.1"
django-redis-sessions = "0.6.1"
httpx = "^0.27.0"
anyio = "^4.3.0"
fastapi = "^0.110.0"
pydantic-settings = "^2.2.1"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
sqlmodel = "^0.0.16"
geoalchemy2 = "^0.14.7"
sqlalchemy = "^2.0.29"
alembic = "^1.13.1"
geojson-pydantic = "^1.0.2"
shapely = "^2.0.3"
pyproj = "^3.6.1"
starlette-admin = "^0.13.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8.0.1"
coverage = "^7.4.1"
pytest-cov = "^4.1.0"
pytest-django = "^4.8.0"
dagger-io = "^0.9.10"
ruff = "^0.2.2"
pytest-httpx = "^0.30.0"

[tool.poetry.scripts]
arpav-ppcv = "arpav_ppcv.main:app"

[tool.pytest.ini_options]
addopts = "--verbose --cov --cov-branch --log-level=warning"

[tool.coverage.run]
branch = true
source = ["djangoapp", "forecastattributes", "places", "thredds", "arpav_ppcv"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
